{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nexport var sum = function sum(key, props) {\n  if (props.isGlobal == false) {\n    switch (key) {\n      case \"Confirmed\":\n        return props.data[0].positif;\n\n      case \"Recovered\":\n        return props.data[0].sembuh;\n\n      case \"Deaths\":\n        return props.data[0].meninggal;\n\n      case \"Active\":\n        return props.data[0].dirawat;\n\n      default:\n        return 0;\n    }\n  } else {\n    switch (key) {\n      case \"Confirmed\":\n        return props.data.reduce(function (sum, a) {\n          return sum + a.attributes.Confirmed;\n        }, 0);\n\n      case \"Recovered\":\n        return props.data.reduce(function (sum, a) {\n          return sum + a.attributes.Recovered;\n        }, 0);\n\n      case \"Deaths\":\n        return props.data.reduce(function (sum, a) {\n          return sum + a.attributes.Deaths;\n        }, 0);\n\n      case \"Active\":\n        return props.data.reduce(function (sum, a) {\n          return sum + a.attributes.Active;\n        }, 0);\n\n      default:\n        return 0;\n    }\n  }\n};\nexport var getAllMonth = function getAllMonth(props) {\n  var monthEng = [\"jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Des\"];\n  var nowDate = new Date();\n  var day = null;\n  var month = null;\n  var year = null;\n  var label = [];\n  var positif = [];\n  var sembuh = [];\n  var meninggal = [];\n  var active = [];\n  var data = [];\n\n  var _iterator = _createForOfIteratorHelper(props.statistik),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n      nowDate = new Date(value.Date);\n      day = nowDate.getDate();\n      month = nowDate.getMonth();\n      year = nowDate.getFullYear();\n      label.push(day + \" \" + monthEng[Math.abs(month)]);\n      active.push(value.Active);\n      sembuh.push(value.Recovered);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};","map":{"version":3,"sources":["D:/joo/bootcamp/niomic/project/NextJs/covid-project/util/library.js"],"names":["sum","key","props","isGlobal","data","positif","sembuh","meninggal","dirawat","reduce","a","attributes","Confirmed","Recovered","Deaths","Active","getAllMonth","monthEng","nowDate","Date","day","month","year","label","active","statistik","value","getDate","getMonth","getFullYear","push","Math","abs"],"mappings":"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","sourcesContent":["export const sum = function (key, props) {\r\n  if (props.isGlobal == false) {\r\n    switch (key) {\r\n      case \"Confirmed\":\r\n        return props.data[0].positif;\r\n      case \"Recovered\":\r\n        return props.data[0].sembuh;\r\n      case \"Deaths\":\r\n        return props.data[0].meninggal;\r\n      case \"Active\":\r\n        return props.data[0].dirawat;\r\n      default:\r\n        return 0;\r\n    }\r\n  } else {\r\n    switch (key) {\r\n      case \"Confirmed\":\r\n        return props.data.reduce((sum, a) => {\r\n          return sum + a.attributes.Confirmed;\r\n        }, 0);\r\n      case \"Recovered\":\r\n        return props.data.reduce((sum, a) => {\r\n          return sum + a.attributes.Recovered;\r\n        }, 0);\r\n      case \"Deaths\":\r\n        return props.data.reduce((sum, a) => {\r\n          return sum + a.attributes.Deaths;\r\n        }, 0);\r\n      case \"Active\":\r\n        return props.data.reduce((sum, a) => {\r\n          return sum + a.attributes.Active;\r\n        }, 0);\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getAllMonth = function (props) {\r\n  const monthEng = [\r\n    \"jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Des\",\r\n  ];\r\n  let nowDate = new Date();\r\n  let day = null;\r\n  let month = null;\r\n  let year = null;\r\n  let label = [];\r\n  let positif = [];\r\n  let sembuh = [];\r\n  let meninggal = [];\r\n  let active = [];\r\n  let data = [];\r\n\r\n  for (let value of props.statistik) {\r\n    nowDate = new Date(value.Date);\r\n    day = nowDate.getDate();\r\n    month = nowDate.getMonth();\r\n    year = nowDate.getFullYear();\r\n    label.push(day + \" \" + monthEng[Math.abs(month)]);\r\n    active.push(value.Active);\r\n    sembuh.push(value.Recovered);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}