{"ast":null,"code":"import _regeneratorRuntime from \"D:/joo/bootcamp/niomic/project/NextJs/covid-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/joo/bootcamp/niomic/project/NextJs/covid-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:/joo/bootcamp/niomic/project/NextJs/covid-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/joo/bootcamp/niomic/project/NextJs/covid-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/joo/bootcamp/niomic/project/NextJs/covid-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/joo/bootcamp/niomic/project/NextJs/covid-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/joo/bootcamp/niomic/project/NextJs/covid-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\joo\\\\bootcamp\\\\niomic\\\\project\\\\NextJs\\\\covid-project\\\\pages\\\\indonesia.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport IndexPage from \"../components/Dashboard/IndexPage\";\nimport fetch from \"isomorphic-fetch\";\n\nvar config = require(\"../config.json\");\n\nvar Indonesia = /*#__PURE__*/function (_React$Component) {\n  _inherits(Indonesia, _React$Component);\n\n  var _super = _createSuper(Indonesia);\n\n  function Indonesia() {\n    _classCallCheck(this, Indonesia);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Indonesia, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          items = _this$props.items,\n          statData = _this$props.statData;\n      return /*#__PURE__*/_jsxDEV(IndexPage, {\n        isGlobal: false,\n        data: items,\n        statistik: statData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var data, items, province, stat, statData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(config[\"kawal-corona\"].base_url, \"/indonesia\"));\n\n              case 2:\n                data = _context.sent;\n                _context.next = 5;\n                return data.json();\n\n              case 5:\n                items = _context.sent;\n                _context.next = 8;\n                return fetch(\"\".concat(config[\"kawal-corona\"].base_url, \"/indonesia\"));\n\n              case 8:\n                province = _context.sent;\n                _context.next = 11;\n                return fetch(\"\".concat(config[\"global-api\"].base_url).concat(config[\"global-api\"].total_live, \"/indonesia\"));\n\n              case 11:\n                stat = _context.sent;\n                _context.next = 14;\n                return stat.json();\n\n              case 14:\n                statData = _context.sent;\n                return _context.abrupt(\"return\", {\n                  items: items,\n                  statData: statData\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Indonesia;\n}(React.Component);\n\nexport default Indonesia;","map":{"version":3,"sources":["D:/joo/bootcamp/niomic/project/NextJs/covid-project/pages/indonesia.js"],"names":["React","IndexPage","fetch","config","require","Indonesia","props","items","statData","base_url","data","json","province","total_live","stat","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;IAEMC,S;;;;;;;;;;;;;6BAgBK;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAEP,0BAAO,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAArB;AAA4B,QAAA,IAAI,EAAED,KAAlC;AAAyC,QAAA,SAAS,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;;;;;;;;;;uBAjBoBN,KAAK,WAAIC,MAAM,CAAC,cAAD,CAAN,CAAuBM,QAA3B,gB;;;AAAlBC,gBAAAA,I;;uBACcA,IAAI,CAACC,IAAL,E;;;AAAdJ,gBAAAA,K;;uBACiBL,KAAK,WACvBC,MAAM,CAAC,cAAD,CAAN,CAAuBM,QADA,gB;;;AAAtBG,gBAAAA,Q;;uBAGaV,KAAK,WACnBC,MAAM,CAAC,YAAD,CAAN,CAAqBM,QADF,SACaN,MAAM,CAAC,YAAD,CAAN,CAAqBU,UADlC,gB;;;AAAlBC,gBAAAA,I;;uBAGiBA,IAAI,CAACH,IAAL,E;;;AAAjBH,gBAAAA,Q;iDACC;AACLD,kBAAAA,KAAK,EAALA,KADK;AAELC,kBAAAA,QAAQ,EAARA;AAFK,iB;;;;;;;;;;;;;;;;;;;EAXaR,KAAK,CAACe,S;;AAsB9B,eAAeV,SAAf","sourcesContent":["import React from \"react\";\r\nimport IndexPage from \"../components/Dashboard/IndexPage\";\r\nimport fetch from \"isomorphic-fetch\";\r\n\r\nconst config = require(\"../config.json\");\r\n\r\nclass Indonesia extends React.Component {\r\n  static async getInitialProps() {\r\n    const data = await fetch(`${config[\"kawal-corona\"].base_url}/indonesia`);\r\n    const items = await data.json();\r\n    const province = await fetch(\r\n      `${config[\"kawal-corona\"].base_url}/indonesia`\r\n    );\r\n    const stat = await fetch(\r\n      `${config[\"global-api\"].base_url}${config[\"global-api\"].total_live}/indonesia`\r\n    );\r\n    const statData = await stat.json();\r\n    return {\r\n      items,\r\n      statData,\r\n    };\r\n  }\r\n  render() {\r\n    const { items, statData } = this.props;\r\n    return <IndexPage isGlobal={false} data={items} statistik={statData} />;\r\n  }\r\n}\r\n\r\nexport default Indonesia;\r\n"]},"metadata":{},"sourceType":"module"}